/*Given a string S that consists of only alphanumeric characters and dashes. The string is separated into N + 1 groups by N dashes. Also given an integer K.

We want to reformat the string S, such that each group contains exactly K characters, except for the first group, which could be shorter than K but still must contain at least one character.

Furthermore, there must be a dash inserted between two groups, and you should convert all lowercase letters to uppercase.

Return the reformatted string.*/

class Solution{
    static String ReFormatString(String S, int K){
        String temp = "",ans = "";
        if(S.length() <= Math.pow(10,5) && S.length()>=1 && K>=1 && K<=Math.pow(10,4)){
            for(int i=S.length()-1; i>=0; i--){
                if(S.charAt(i) == '-'){
                    continue;
                }
                if(S.charAt(i)>='a' && S.charAt(i)<='z'){
                    temp += (char)(S.charAt(i) - 32);
                }
                else{
                    temp += S.charAt(i);
                }
            }
            for(int i=temp.length()-1; i>=0; i--){
                ans += temp.charAt(i);
                if(i == 0)
                    continue;
                if(i % K == 0) {
                    ans += "-";
                }
            }
            return ans;
        }
        else{
            return ans;
        }
    }
    
}
